# Use Dockerized infrastructure
sudo: false
language: node_js
node_js:
- "6"
# Cache Gcloud sdk and node packages between commands
cache:
  yarn: true
  directories:
  -"$HOME/google-cloud-sdk/"
  - node_modules/
env:
# Make sure gcloud command is on our PATH and the App Engine SDK is in the Python path
- GAE_PYTHONPATH=${HOME}/.cache/google_appengine PATH=$PATH:${HOME}/google-cloud-sdk/bin PYTHONPATH=${PYTHONPATH}:${GAE_PYTHONPATH} CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
# [START auth]
# decrypt credentials
- openssl aes-256-cbc -K $encrypted_0e2a5fe8a7a1_key -iv $encrypted_0e2a5fe8a7a1_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
# If the sdk is not already cached, download and unpack
- if [ ! -d ${HOME}/google-cloud-sdk ]; then
     curl https://sdk.cloud.google.com | bash;
  fi
- tar -xzf credentials.tar.gz
- mkdir -p lib
# Here we use the decrypted service account credentials to authenticate the command line tool
- gcloud auth activate-service-account --key-file client-secret.json
# [END auth]
install:
# Set the correct project to deploy to
- gcloud config set project yelp-tinder
- gcloud -q components update gae-node
# Install dependencies
- npm i
script:
# unit tests
# [START deploy]
# Deploy the app
- gcloud -q preview app deploy app.yaml --promote
# Run and end to end test
#[END deploy]